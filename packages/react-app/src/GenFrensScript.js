let tokenId = 1234;
let hash = "000000";
let seed, xoff = 1, pCs = [0, 30, 80, 120, 180, 225, 270, 300], sCs = [0, 30, 120, 180, 270, 300], nMV = [.5, 1, 3, 4.5], eSs = [.26, .33, .4], tkV = [10, 25, 70], eLs = [.4, .44]; function setup() { createCanvas(500, 500), w = width; h = height; colorMode(HSB, 360, 100, 100), strokeCap(ROUND), noiseSeed(tokenId), randomSeed(tokenId); pC = parseInt(hash.substring(0, 1)), sC = parseInt(hash.substring(1, 2)), nM = parseInt(hash.substring(2, 3)), eS = parseInt(hash.substring(3, 4)), tk = parseInt(hash.substring(4, 5)), eL = parseInt(hash.substring(5, 6)); wP = random(5, 10); hP = random(5, 10); } function draw() { background(255); for (let s = .05 * w; s < w; s += .1 * w)for (let e = .05 * h; e < h; e += .1 * h)noStroke(), fill(sCs[sC], random(25), 100), ci = new C1, push(), translate(s, e), scale(.14, .14), ci.sh(), pop(); c1 = new C2(pCs[pC], 40, 100, 0, nMV[nM], wP, hP, tkV[tk]), push(), translate(w / 2, h), rotate(3.14), scale(.55, 1.25), c1.sh(), pop(), push(), translate(w / 2, h / 2), c1.sh(), pop(), e1 = new C2(0, 0, 100, 1, nMV[nM] / 2 + 1, wP, hP, tkV[tk]), push(), translate(.4 * w, .4 * h), scale(.33), e1.sh(), pop(), e2 = new C2(0, 0, 100, 1, nMV[nM] / 2 + 1, wP, hP, tkV[tk]), push(), push(), translate(.6 * w, .4 * h), scale(eSs[eS]), rotate(PI), e2.sh(), pop(), fill(sC, 70, 100), p1 = new C2(sCs[sC], 100, 100, 1, nMV[nM] / 2 + 1, wP, hP, tkV[tk]), push(), translate(.4 * w, h * eLs[eL]), scale(.1), p1.sh(), pop(), p2 = new C2(sCs[sC], 100, 100, 1, nMV[nM] / 2 + 1, wP, hP, tkV[tk]), push(), translate(.6 * w, .4 * h), scale(.1), rotate(PI), p2.sh(), pop(); for (let s = .4 * w; s <= .6 * w; s++)sats = map(noise(xoff), 0, 1, 30, 100), fill(sCs[sC], sats, 100), r = map(noise(xoff), 0, 1, .53, .77), ellipse(s, r * h, (h + w) / 2 * .05), xoff += .01; noLoop() } class C1 { sh() { beginShape(); for (let s = 0; s < TWO_PI; s += .16) { let e = map(cos(s), -1, 1, 0, nMV[nM]), t = map(sin(s), -1, 1, 0, nMV[nM]), i = map(noise(e, t), 0, 1, 100, 200), h = i * cos(s), o = i * sin(s); vertex(h, o), e += .004, t += .006 } endShape() } } class C2 { constructor(s, e, t, i, h, o, a, n) { this.hue = s, this.sat = e, this.bt = t, this.cNM = h, this.cH = o, this.cW = a, this.bd = i, this.sW = n } sh() { beginShape(), noFill(); for (let s = 0; s < TWO_PI; s += .0456) { let e = map(cos(s), -1, 1, 0, this.cNM), t = map(sin(s), -1, 1, 0, this.cNM), i = map(noise(e, t), 0, 1, 100, 200), h = i * cos(s), o = i * sin(s); 0 == this.bd && (stroke(this.hue, this.sat, this.bt - 25), strokeWeight(this.sW)), vertex(h, o), endShape(), push(), stroke(this.hue, this.sat, this.bt), strokeWeight(6), line(h + .015 * w, o + .02 * h, w / this.cW, h / this.cH), pop(), e += .04, t += .006 } endShape() } }